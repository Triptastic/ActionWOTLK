local _G,setmetatable,pairs,ipairs,select,error,math=_G,setmetatable,pairs,ipairs,select,error,math;local a=_G.wipe;local b=math.max;local c=_G.TMW;local d=c.strlowerCache;local e=_G.Action;local f=e.toNum;local g=e.Const;local h=e.Create;local i=e.Listener;local j=e.Print;local k=e.TeamCache;local l=e.EnemyTeam;local m=e.FriendlyTeam;local n=e.LossOfControl;local o=e.Player;local p=e.MultiUnits;local q=e.UnitCooldown;local r=e.Unit;local s=LibStub("PetLibrary")local t=LibStub("LibAuraTypes")local u=e.SetToggle;local v=e.GetToggle;local w=e.GetPing;local x=e.GetGCD;local y=e.GetCurrentGCD;local z=e.GetLatency;local A=e.GetSpellInfo;local B=e.BurstIsON;local C=e.InterruptIsValid;local D=e.IsUnitEnemy;local E=e.DetermineUsableObject;local F=e.DetermineIsCurrentObject;local G=e.DetermineCountGCDs;local H=e.DetermineCooldownAVG;local I=e.AuraIsValid;local J=e.CanUseStoneformDefense;local K=e.CanUseStoneformDispel;local L=e.CanUseHealingPotion;local M=e.CanUseLivingActionPotion;local N=e.CanUseLimitedInvulnerabilityPotion;local O=e.CanUseRestorativePotion;local P=e.CanUseSwiftnessPotion;local Q=e.CanUseManaRune;local R=k.Friendly;local S=p:GetActiveUnitPlates()local T=_G.SPELL_FAILED_TARGET_NO_POCKETS;local U=_G.ERR_INVALID_ITEM_TARGET;local V=_G.MAX_BOSS_FRAMES;local W=_G.CreateFrame;local X=_G.UIParent;local Y=_G.StaticPopup1;local Z;local _=_G.GetWeaponEnchantInfo;local a0=_G.GetItemInfo;local a1,a2,a3,a4=_G.UnitGUID,_G.UnitIsUnit,_G.UnitCreatureType,_G.UnitAttackPower;local a5=_G.Toaster;local a6=_G.TMW.GetSpellTexture;e[e.PlayerClass]={Perception=h({Type="Spell",ID=58985}),EscapeArtist=h({Type="Spell",ID=20589}),BloodFury=h({Type="Spell",ID=20572}),Berserking=h({Type="Spell",ID=26297}),WilloftheForsaken=h({Type="Spell",ID=7744}),ArcaneTorrent=h({Type="Spell",ID=28730}),Corruption=h({Type="Spell",ID=172,useMaxRank=true}),CurseofAgony=h({Type="Spell",ID=980,useMaxRank=true}),CurseofDoom=h({Type="Spell",ID=603,useMaxRank=true}),CurseofTongues=h({Type="Spell",ID=1714,useMaxRank=true}),CurseofWeakness=h({Type="Spell",ID=702,useMaxRank=true}),CurseoftheElements=h({Type="Spell",ID=1490,useMaxRank=true}),DeathCoil=h({Type="Spell",ID=6789,useMaxRank=true}),DrainLife=h({Type="Spell",ID=689,useMaxRank=true}),DrainMana=h({Type="Spell",ID=5138,useMaxRank=true}),DrainSoul=h({Type="Spell",ID=1120,useMaxRank=true}),Fear=h({Type="Spell",ID=5782,useMaxRank=true}),HowlofTerror=h({Type="Spell",ID=5484,useMaxRank=true}),LifeTap=h({Type="Spell",ID=1454,useMaxRank=true}),SeedofCorruption=h({Type="Spell",ID=27243,useMaxRank=true}),Banish=h({Type="Spell",ID=710,useMaxRank=true}),CreateFirestone=h({Type="Spell",ID=6366,useMaxRank=true}),CreateHealthstone=h({Type="Spell",ID=6201,useMaxRank=true}),CreateSoulstone=h({Type="Spell",ID=693,useMaxRank=true}),CreateSpellstone=h({Type="Spell",ID=2362,useMaxRank=true}),DemonArmor=h({Type="Spell",ID=706,useMaxRank=true}),DemonSkin=h({Type="Spell",ID=687,useMaxRank=true}),DetectInvisibility=h({Type="Spell",ID=132,useMaxRank=true}),EyeofKilrogg=h({Type="Spell",ID=126,useMaxRank=true}),FelArmor=h({Type="Spell",ID=28176,useMaxRank=true}),HealthFunnel=h({Type="Spell",ID=755,useMaxRank=true}),RitualofSouls=h({Type="Spell",ID=29893,useMaxRank=true}),RitualofSummoning=h({Type="Spell",ID=698,useMaxRank=true}),SenseDemons=h({Type="Spell",ID=5500,useMaxRank=true}),ShadowWard=h({Type="Spell",ID=6229,useMaxRank=true}),Soulshatter=h({Type="Spell",ID=29858,useMaxRank=true}),SubjugateDemon=h({Type="Spell",ID=1098,useMaxRank=true}),SummonFelhunter=h({Type="Spell",ID=691,useMaxRank=true}),SummonImp=h({Type="Spell",ID=688,useMaxRank=true}),SummonIncubus=h({Type="Spell",ID=713,useMaxRank=true}),SummonSuccubus=h({Type="Spell",ID=712,useMaxRank=true}),SummonVoidwalker=h({Type="Spell",ID=697,useMaxRank=true}),UnendingBreath=h({Type="Spell",ID=5697,useMaxRank=true}),Hellfire=h({Type="Spell",ID=1949,useMaxRank=true}),Immolate=h({Type="Spell",ID=348,useMaxRank=true}),Incinerate=h({Type="Spell",ID=29722,useMaxRank=true}),RainofFire=h({Type="Spell",ID=5740,useMaxRank=true}),SearingPain=h({Type="Spell",ID=5676,useMaxRank=true}),ShadowBolt=h({Type="Spell",ID=686,useMaxRank=true}),SoulFire=h({Type="Spell",ID=6353,useMaxRank=true}),CurseofExhaustion=h({Type="Spell",ID=18223,useMaxRank=true}),SiphonLife=h({Type="Spell",ID=63108,useMaxRank=true}),DarkPact=h({Type="Spell",ID=18220,useMaxRank=true}),UnstableAffliction=h({Type="Spell",ID=30108,useMaxRank=true}),Haunt=h({Type="Spell",ID=48181,useMaxRank=true}),SoulLink=h({Type="Spell",ID=19028,useMaxRank=true}),FelDomination=h({Type="Spell",ID=18708,useMaxRank=true}),ManaFeed=h({Type="Spell",ID=30326,useMaxRank=true}),DemonicEmpowerment=h({Type="Spell",ID=47193,useMaxRank=true}),SummonFelguard=h({Type="Spell",ID=30146,useMaxRank=true}),Metamorphosis=h({Type="Spell",ID=59672,useMaxRank=true}),Shadowburn=h({Type="Spell",ID=17877,useMaxRank=true}),Conflagrate=h({Type="Spell",ID=17962,useMaxRank=true}),Shadowfury=h({Type="Spell",ID=30283,useMaxRank=true}),ChaosBolt=h({Type="Spell",ID=50796,useMaxRank=true}),ImmolationAura=h({Type="Spell",ID=50589,useMaxRank=true}),ShadowCleave=h({Type="Spell",ID=50581,useMaxRank=true}),Shadowflame=h({Type="Spell",ID=47897,useMaxRank=true}),MajorManaPotion=h({Type="Potion",ID=13444}),SoulShard=h({Type="Item",ID=6265}),ImprovedShadowBolt=h({Type="Spell",ID=17803,Hidden=true}),ShadowMastery=h({Type="Spell",ID=17800,Hidden=true}),MoltenCore=h({Type="Spell",ID=71165,Hidden=true}),Decimation=h({Type="Spell",ID=63167,Hidden=true}),LashofPain=h({Type="Spell",ID=7814,useMaxRank=true}),Torment=h({Type="Spell",ID=3716,useMaxRank=true}),ShadowBite=h({Type="Spell",ID=54049,useMaxRank=true}),Cleave=h({Type="Spell",ID=30213,useMaxRank=true}),SpellLock=h({Type="Spell",ID=19244,useMaxRank=true}),DevourMagic=h({Type="Spell",ID=19505,useMaxRank=true}),FireShield=h({Type="Spell",ID=2947,useMaxRank=true}),Seduction=h({Type="Spell",ID=6358,useMaxRank=true}),Heroism=h({Type="Spell",ID=32182}),Bloodlust=h({Type="Spell",ID=2825}),Drums=h({Type="Spell",ID=29529}),SuperHealingPotion=h({Type="Potion",ID=22829,QueueForbidden=true}),SpiritsoftheDamned=h({Type="Spell",ID=61082,Hidden=true})}local a7=setmetatable(e[e.PlayerClass],{__index=e})o:AddBag("SOUL_SHARD",{itemID=a7.SoulShard.ID})s:AddActionsSpells(a7.PlayerClass,{a7.Torment,a7.LashofPain,a7.SpellLock,a7.DevourMagic,a7.FireShield,a7.Seduction,a7.ShadowBite,a7.Cleave})s:AddTrackers(a7.PlayerClass)local a8="player"local a9="target"local aa="pet"local ab="targettarget"local ac="focus"local function ad(ae)if ae then return 1 else return 0 end end;local function af(ae)return ae~=0 end;a5:Register("TripToast",function(ag,...)local ah,ai,aj=...ag:SetTitle(ah or"nil")ag:SetText(ai or"nil")if aj then if type(aj)~="number"then error(tostring(aj).." (spellID) is not a number for TripToast!")ag:SetIconTexture("Interface\FriendsFrame\Battlenet-WoWicon")else ag:SetIconTexture(a6(aj))end else ag:SetIconTexture("Interface\FriendsFrame\Battlenet-WoWicon")end;ag:SetUrgencyLevel("normal")end)local ak={TotalAndPhys={"TotalImun","DamagePhysImun"},TotalAndCC={"TotalImun","CCTotalImun"},TotalAndPhysKick={"TotalImun","DamagePhysImun","KickImun"},TotalAndPhysAndCC={"TotalImun","DamagePhysImun","CCTotalImun"},TotalAndPhysAndStun={"TotalImun","DamagePhysImun","StunImun"},TotalAndPhysAndCCAndStun={"TotalImun","DamagePhysImun","CCTotalImun","StunImun"},TotalAndMag={"TotalImun","DamageMagicImun"},TotalAndMagKick={"TotalImun","DamageMagicImun","KickImun"},DisablePhys={"TotalImun","DamagePhysImun","Freedom","CCTotalImun"},DisableMag={"TotalImun","DamageMagicImun","Freedom","CCTotalImun"},AuraForCC={"TotalImun","DamageMagicImun","Reflect","CCTotalImun"},AuraForInterrupt={"TotalImun","DamageMagicImun","Reflect","CCTotalImun","KickImun"},AuraForFear={"TotalImun","DamageMagicImun","Reflect","CCTotalImun","FearImun"},OpenerRotation=false}local al={[18864]=true,[18865]=true,[15691]=true,[20478]=true}local function am(unitID)return a7.ShadowBolt:IsInRange(unitID)end;am=a7.MakeFunctionCachedDynamic(am)local function an(unitID)local ao,ap,aq=a7.InterruptIsValid(unitID,"TargetMouseover")end;an=a7.MakeFunctionCachedDynamic(an)local function ar()local as=r(unitID):HasDeBuffs(a7.CurseofAgony.ID,true)>0;local at=r(unitID):HasDeBuffs(a7.CurseoftheElements.ID)>0;local au=r(unitID):HasDeBuffs(a7.CurseofTongues.ID)>0;local av=r(unitID):HasDeBuffs(a7.CurseofWeakness.ID)>0;local aw=r(unitID):HasDeBuffs(a7.CurseofDoom.ID)>0;local ax=r(unitID):HasDeBuffs(a7.CurseofExhaustion.ID)>0;local ay=a7.GetToggle(2,"CurseChoice")if ay=="Agony"then if a7.CurseofAgony:IsReady(a8)and not as then return a7.CurseofAgony end elseif ay=="Elements"then if a7.CurseoftheElements:IsReady(a8)and not at then return a7.CurseoftheElements end elseif ay=="Tongues"then if a7.CurseofTongues:IsReady(a8)and not au then return a7.CurseofTongues end elseif ay=="Weakness"then if a7.CurseofWeakness:IsReady(a8)and not av then return a7.CurseofWeakness end elseif ay=="Doom"then if a7.CurseofDoom:IsReady(a8)and not as then return a7.CurseofDoom end elseif ay=="Exhaustion"then if a7.CurseofExhaustion:IsReady(a8)and not ax then return a7.CurseofExhaustion end end end;local function az()local aA=r(a8):HasBuffs(a7.DemonSkin.ID)==0 and r(a8):HasBuffs(a7.DemonArmor.ID)==0 and r(a8):HasBuffs(a7.FelArmor.ID)==0;if aA then if a7.FelArmor:IsReady(a8)then return a7.FelArmor elseif a7.DemonSkin:IsReady(a8)then return a7.DemonSkin elseif a7.DemonArmor:IsReady(a8)then return a7.DemonArmor end end end;local function aB()return o:GetBag("SOUL_SHARD")and o:GetBag("SOUL_SHARD").count or a7.SoulShard:GetCount()or 0 end;local aC=aB()local function aD(aE,aF)local aG;if aF then for aH,aI in ipairs(ak.CastHealthStoneToAllHisRankItems[aE])do aG=aI:GetCount()if aG>0 then return aG end end else for aH,aI in ipairs(ak.CastHealthStoneToItems[aE])do aG=aI:GetCount()if aG>0 then return aG end end end;return 0 end;local function aJ()for aK=1,#ak.BagSoulstone do if o:GetBag(ak.BagSoulstone[aK])then return o:GetBag(ak.BagSoulstone[aK]).itemID end end end;local function aL(unitID,isFriendly)if a7.DevourMagic:IsReady(unitID,true)and s:IsInRange(a7.DevourMagic,unitID)then if isFriendly then if I(unitID,"UseDispel","Magic")or I(unitID,"UsePurge","PurgeFriendly")then return a7.DevourMagic end else if I(unitID,"UsePurge","PurgeHigh")or I(unitID,"UsePurge","PurgeLow")then return a7.DevourMagic end end end end;local function aM(unitID)local ao,ap,aH,aN,aO=C(unitID,nil,nil,false)if(ao or ap)and aO>=z()then if ao and not aN and s:IsInRange(a7.SpellLock,unitID)and a7.SpellLock:IsReady(unitID,true)and a7.SpellLock:AbsentImun(unitID,ak.AuraForInterrupt)then return a7.SpellLock end;if ap and r(unitID):IsHumanoid()and aO>a7.Seduction:GetSpellCastTimeCache()+w()and s:IsInRange(a7.Seduction,unitID)and a7.Seduction:IsReady(unitID,true)and a7.Seduction:AbsentImun(unitID,ak.AuraForCC)then return a7.Seduction end end end;a7[3]=function(aP,aQ)local aR=a7.Player:IsMoving()local aS=r(a8):CombatTime()>0;local aT=r(a8):CombatTime()local aU=a7.GetToggle(2,"AoE")if o:IsCasting()or o:IsChanneling()then canCast=false else canCast=true end;if not a7.Toaster:IsPlaying("TripToast")then if a7.IsUnitEnemy(a9)and a7.Shadowfury:GetCooldown()<=2 and a7.Shadowfury:IsTalentLearned()and aU and aS and(s:GetInRange(a7.LashofPain.ID,5)>=3 or s:GetInRange(a7.Torment.ID,5)>=3 or s:GetInRange(a7.ShadowBite.ID,5)>=3 or s:GetInRange(a7.Cleave.ID,5)>=3 or p:GetByRange(15,4)>=3)then a7.Toaster:Spawn("TripToast","Shadowfury!","Shadowfury soon, get cursor ready!",a7.Shadowfury.ID)end end;local aV=a7.GetToggle(1,"Potion")local aW=a7.GetToggle(2,"PotionController")if not o:IsStealthed()then local aX=v(2,"HSHealth")if aX>=0 then local aY=E(a8,true,nil,true,nil,a7.HSGreater3,a7.HSGreater2,a7.HSGreater1,a7.HS3,a7.HS2,a7.HS1,a7.HSLesser3,a7.HSLesser2,a7.HSLesser1,a7.HSMajor3,a7.HSMajor2,a7.HSMajor1,a7.HSMinor3,a7.HSMinor2,a7.HSMinor1)if aY then if aX>=100 then if r(a8):TimeToDie()<=9 and r(a8):HealthPercent()<=40 then return aY:Show(aP)end elseif r(a8):HealthPercent()<=aX then return aY:Show(aP)end end end end;if aV and aT>2 then if aW=="LivingActionPotion"and e.CanUseLivingActionPotion(aP,am())then return true end;if aW=="RestorativePotion"and e.CanUseRestorativePotion(aP)then return true end;if aW=="LimitedInvulnerabilityPotion"and r(a8):HasBuffs("DeffBuffs")and e.CanUseLimitedInvulnerabilityPotion(aP)then return true end;if aW=="HealingPotion"and e.CanUseHealingPotion(aP)then return true end end;local aZ=a7.GetToggle(2,"DefensivesHP")if aS then if petName=="Voidwalker"and a7.Sacrifice:IsReadyByPassCastGCD(a8)then if r(a8):HealthPercent()>aZ and r(a8):GetRealTimeDMG()>0 then return a7.Sacrifice:Show(aP)end end end;if a7.DeathCoil:IsReady(unitID)and r(a8):IsExecuted()and a7.DeathCoil:AbsentImun(a9,ak.AuraForCC)then return a7.DeathCoil:Show(aP)end;if a7.WilloftheForsaken:AutoRacial()then return a7.WilloftheForsaken:Show(aP)end;if a7.FelDomination:IsReady(a8)and aS and not r(aa):IsExists()then return a7.FelDomination:Show(aP)end;local a_=a7.GetToggle(2,"PetChoice")if not r(aa):IsExists()and(not aS or r(a8):HasBuffs(a7.FelDomination.ID,true)>0)then if a_=="Imp"then if a7.SummonImp:IsReady(a8)then return a7.SummonImp:Show(aP)end elseif a_=="Voidwalker"then if a7.SummonVoidwalker:IsReady(a8)then return a7.SummonVoidwalker:Show(aP)end elseif a_=="Succubus"then if a7.SummonSuccubus:IsReady(a8)then return a7.SummonSuccubus:Show(aP)end elseif a_=="Incubus"then if a7.SummonIncubus:IsReady(a8)then return a7.SummonIncubus:Show(aP)end elseif a_=="Felhunter"then if a7.SummonFelhunter:IsReady(a8)then return a7.SummonFelhunter:Show(aP)end elseif a_=="Felguard"then if a7.SummonSuccubus:IsReady(a8)then return a7.SummonFelguard:Show(aP)end end end;local b0=az()if b0 and canCast then return b0:Show(aP)end;local function b1(unitID)local b2=select(6,r(unitID):InfoGUID())local b3=a7.GetToggle(2,"SpecSelect")local b4=r(unitID):HasDeBuffs(a7.Corruption.ID,true)>0;local b5=r(unitID):HasDeBuffs(a7.Immolate.ID,true)==0;local b6=o:GetDeBuffsUnitCount(a7.UnstableAffliction.ID)<1;local b7=a7.GetToggle(2,"DrainLifeHP")if a7.DrainLife:IsReady(unitID)and r(a8):HealthPercent()<=b7 and canCast and not aR then return a7.DrainLife:Show(aP)end;local b8=a7.GetToggle(2,"LifeTapMana")local b9=a7.GetToggle(2,"LifeTapHP")if a7.LifeTap:IsReady(a8)and o:ManaPercentage()<=b8 and r(a8):HealthPercent()>=b9 then return a7.LifeTap:Show(aP)end;local ba=a7.GetToggle(2,"SpiritsoftheDamned")if ba then if a7.LifeTap:IsReady(a8)and r(a8):HasBuffs(a7.SpiritsoftheDamned.ID)==0 then return a7.SenseDemons:Show(aP)end end;local bb=a7.GetToggle(2,"Soulshardcap")if a7.DrainSoul:IsReady(unitID)and not r(unitID):IsBoss()and aC<bb and r(unitID):HealthPercent()<=25 then return a7.DrainSoul:Show(aP)end;local bc=aM(unitID)if bc then return bc:Show(aP)end;if a7.DeathCoil:IsReady(unitID)then local ao,ap,aq,aH,aO=C(a9,nil,nil,true)if(ao or ap or aq)and aO>=a7.GetLatency()and a7.DeathCoil:AbsentImun(a9,ak.AuraForCC)then return a7.DeathCoil:Show(aP)end end;local bd=aL(unitID,isFriendly)if bd then return bd:Show(aP)end;if aS and B(unitID)then if a7.BloodFury:IsReady(a8)then return a7.BloodFury:Show(aP)end;if a7.Berserking:IsReady(a8)then return a7.Berserking:Show(aP)end;if a7.Trinket1:IsReady(a8)then return a7.Trinket1:Show(aP)end;if a7.Trinket2:IsReady(a8)then return a7.Trinket2:Show(aP)end end;if am(unitID)and(b3=="Affliction"or b3=="Auto"and a7.Haunt:IsTalentLearned())then if a7.Shadowflame:IsReady(unitID)and aU and p:GetByRange(15,4)>=3 then return a7.Shadowflame:Show(aP)end;if s:GetInRange(a7.LashofPain.ID,5)>=3 or s:GetInRange(a7.Torment.ID,5)>=3 or s:GetInRange(a7.ShadowBite.ID,5)>=3 or s:GetInRange(a7.Cleave.ID,5)>=3 or p:GetByRange(15,4)>=3 then if a7.SeedofCorruption:IsReady(unitID)and aU and canCast and not aR then return a7.SeedofCorruption:Show(aP)end end;if a7.ShadowBolt:IsReady(unitID)and(a7.ImprovedShadowBolt:IsTalentLearned()or not aS)and not aR and canCast then if r(unitID):HasDeBuffs(a7.ShadowMastery.ID)<a7.ShadowBolt:GetSpellCastTime()and not a7.ShadowBolt:IsSpellInFlight()then return a7.ShadowBolt:Show(aP)end end;if a7.Corruption:IsReady(unitID)and not b4 and canCast and r(unitID):TimeToDie()>=8 then if a7.ImprovedShadowBolt:IsTalentLearned()and r(unitID):HasDeBuffs(a7.ImprovedShadowBolt.ID)or not a7.ImprovedShadowBolt:IsTalentLearned()then return a7.Corruption:Show(aP)end end;if a7.UnstableAffliction:IsReady(unitID)and not aR and canCast and r(unitID):TimeToDie()>=15 and b6 then return a7.UnstableAffliction:Show(aP)end;local be=ar()if be and canCast then return be:Show(aP)end;if a7.Haunt:IsReady(unitID)and canCast and not aR then return a7.Haunt:Show(aP)end;if a7.DrainSoul:IsReady(unitID)and r(unitID):HealthPercent()<25 and not aR and canCast then return a7.DrainSoul:Show(aP)end;if a7.ShadowBolt:IsReady(unitID)and not aR and canCast then return a7.ShadowBolt:Show(aP)end end;if am(unitID)and(b3=="Demonology"or b3=="Auto"and a7.SummonFelguard:IsTalentLearned())then if a7.Metamorphosis:IsReady(a8)and B(unitID)then if aU and p:GetByRange(15,4)>=3 or(r(unitID):TimeToDie()>30 or r(unitID):IsBoss())then return a7.Metamorphosis:Show(aP)end end;if a7.ShadowBolt:IsReady(unitID)and(a7.ImprovedShadowBolt:IsTalentLearned()or not aS)and not aR and canCast then if r(unitID):HasDeBuffs(a7.ShadowMastery.ID)<a7.ShadowBolt:GetSpellCastTime()and not a7.ShadowBolt:IsSpellInFlight()then return a7.ShadowBolt:Show(aP)end end;if a7.DemonicEmpowerment:IsReadyByPassCastGCD(a8)and s:IsInRange(a7.Cleave.ID,unitID)then return a7.DemonicEmpowerment:Show(aP)end;if a7.ImmolationAura:IsReady(unitID)and r(a8):HasBuffs(a7.Metamorphosis.ID,true)>0 and aU and p:GetByRange(15,4)>=3 then return a7.ImmolationAura:Show(aP)end;if a7.ShadowCleave:IsReady(unitID)and r(a8):HasBuffs(a7.Metamorphosis.ID,true)>0 and aU and p:GetByRange(15,4)>=3 then return a7.ShadowCleave:Show(aP)end;if a7.Shadowflame:IsReady(unitID)and aU and p:GetByRange(15,4)>=3 then return a7.Shadowflame:Show(aP)end;if s:GetInRange(a7.LashofPain.ID,5)>=3 or s:GetInRange(a7.Torment.ID,5)>=3 or s:GetInRange(a7.ShadowBite.ID,5)>=3 or s:GetInRange(a7.Cleave.ID,5)>=3 or p:GetByRange(15,4)>=3 then if a7.SeedofCorruption:IsReady(unitID)and aU and canCast and not aR then return a7.SeedofCorruption:Show(aP)end end;local be=ar()if be and canCast then return be:Show(aP)end;if a7.Corruption:IsReady(unitID)and not b4 and canCast and r(unitID):TimeToDie()>=17 then if a7.ImprovedShadowBolt:IsTalentLearned()and r(unitID):HasDeBuffs(a7.ImprovedShadowBolt.ID)or not a7.ImprovedShadowBolt:IsTalentLearned()then return a7.Corruption:Show(aP)end end;if a7.Immolate:IsReady(unitID)and b5 and canCast and r(unitID):TimeToDie()>=5 and not aR then return a7.Immolate:Show(aP)end;if a7.SoulFire:IsReady(unitID)and r(a8):HasBuffs(a7.Decimation.ID)>0 and canCast and not aR then return a7.SoulFire:Show(aP)end;if a7.Incinerate:IsReady(unitID)and(r(a8):HasBuffs(a7.MoltenCore.ID)>0 or not a7.ImprovedShadowBolt:IsTalentLearned())and not aR and canCast then return a7.Incinerate:Show(aP)end;if a7.ShadowBolt:IsReady(unitID)and canCast and not aR then return a7.ShadowBolt:Show(aP)end end;if am(unitID)and(b3=="Destruction"or b3=="Auto"and a7.ChaosBolt:IsTalentLearned())then if a7.Incinerate:IsReady(unitID)and not aS and canCast and not aR then return a7.Incinerate:Show(aP)end;local be=ar()if be and canCast then return be:Show(aP)end;if s:GetInRange(a7.LashofPain.ID,5)>=3 or s:GetInRange(a7.Torment.ID,5)>=3 or s:GetInRange(a7.ShadowBite.ID,5)>=3 or s:GetInRange(a7.Cleave.ID,5)>=3 or p:GetByRange(15,4)>=3 then if a7.Shadowfury:IsReady(a8)and aU and canCast then return a7.Shadowfury:Show(aP)end end;if a7.Shadowflame:IsReady(unitID)and aU and p:GetByRange(15,4)>=3 then return a7.Shadowflame:Show(aP)end;if s:GetInRange(a7.LashofPain.ID,5)>=3 or s:GetInRange(a7.Torment.ID,5)>=3 or s:GetInRange(a7.ShadowBite.ID,5)>=3 or s:GetInRange(a7.Cleave.ID,5)>=3 or p:GetByRange(15,4)>=3 then if a7.SeedofCorruption:IsReady(unitID)and aU and canCast and not aR then return a7.SeedofCorruption:Show(aP)end end;if a7.Immolate:IsReady(unitID)and b5 and canCast and r(unitID):TimeToDie()>=5 and not aR then return a7.Immolate:Show(aP)end;if a7.Conflagrate:IsReady(unitID)and not b5 and canCast then return a7.Conflagrate:Show(aP)end;if a7.ChaosBolt:IsReady(unitID)and canCast and not aR then return a7.ChaosBolt:Show(aP)end;if a7.Incinerate:IsReady(unitID)and canCast and not aR then return a7.Incinerate:Show(aP)end;if a7.Corruption:IsReady(unitID)and canCast and not b4 then return a7.Corruption:Show(aP)end end;if am(unitID)then if a7.ShadowBolt:IsReady(unitID)and(a7.ImprovedShadowBolt:IsTalentLearned()or not aS)and not aR and canCast then if r(unitID):HasDeBuffs(a7.ShadowMastery.ID)<a7.ShadowBolt:GetSpellCastTime()and not a7.ShadowBolt:IsSpellInFlight()then return a7.ShadowBolt:Show(aP)end end;if s:GetInRange(a7.LashofPain.ID,5)>=3 or s:GetInRange(a7.Torment.ID,5)>=3 or s:GetInRange(a7.ShadowBite.ID,5)>=3 or s:GetInRange(a7.Cleave.ID,5)>=3 or p:GetByRange(15,4)>=3 then if a7.SeedofCorruption:IsReady(unitID)and aU and canCast and not aR then return a7.SeedofCorruption:Show(aP)end end;if a7.Corruption:IsReady(unitID)and canCast and not b4 then return a7.Corruption:Show(aP)end;if a7.Immolate:IsReady(unitID)and b5 and canCast and r(unitID):TimeToDie()>=5 and not aR then return a7.Immolate:Show(aP)end;if a7.ShadowBolt:IsReady(unitID)then return a7.ShadowBolt:Show(aP)end end end;if a7.IsUnitEnemy("target")and not r("target"):IsDead()then unitID="target"if b1(unitID)then return true end end end;a7[1]=nil;a7[4]=nil;a7[5]=nil;a7[6]=nil;a7[7]=nil;a7[8]=nil
